;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
;   RAINGAME - Yamajac, /u/Yamatjac, @Yamajac#3141, CharlotteConnolly@yamajac.com
;
;   RainGame's Official Screen Editor
;   If this ever becomes big enough to warrant people making third party apps
;   I guarantee pretty much any third party screen editor will be better
;   Rainmeter kinda sucks for this.
;   Kinda sucks for making games too but at least that parts fun and I wanna
;   actually spend time making it good.
;
;  
;   TODO:
;       - Make a TODO list
;       - Never clean the code
;       - It's an in-house map editor what'd you expect
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; All the boring shit
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[Rainmeter]
Update = 16
DefaultUpdateDivider = -1
[Metadata]
Name        = Raingame (Screen Editor)
Author      = Yamajac - /u/Yamatjac
Information = A game engine written entirely in Rainmeter .ini files
Version     = Alpha

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Some more boring shit
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[Variables]
Game =PokemonRed
Screen =ProfessorOaksLab
CurType = 0
CurChar = 0
Scale = 2
ScreenWidth = 0
ScreenHeight = 0
HudPanelColour = 40,40,40,255 
HudPanelWidth  = 130
ButtonSize     = 20

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Pre-Init: Grab the current game and load the data into memory
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[LoadGame]
@IncludeGame   = #@#Games/#Game#/#Game#.inc
@IncludeScreen = #@#Games/#Game#/Screens/#Screen#.inc


[HideControl]
Measure = Calc
OnUpdateAction = [!HideMeterGroup Control][!SetVariable PlayerX 0][!SetVariable PlayerY 0][!DisableMeasure #CURRENTSECTION#]

[ScreenWidthLoader]
Measure = Calc
Formula = (#ScreenWidth# = 0 ? #GameWidth# : #ScreenWidth#)
OnUpdateAction = [!SetVariable ScreenWidth [#CURRENTSECTION#]]
[ScreenHeightLoader]
Measure = Calc
Formula = (#ScreenHeight# = 0 ? #GameHeight# : #ScreenHeight#)
OnUpdateAction = [!SetVariable ScreenHeight [#CURRENTSECTION#]]

[CheckIfWeNeedToGenerateAnEmptyCollisionMapOrNot]
Measure = String
String = #Collisions#
IfMatch = "#*Collisions*#"
IfMatchAction = [!EnableMeasure GenerateEmptyCollisionMap][!UpdateMeasure GenerateEmptyCollisionMap]
[HowLongOfACollisionMapStringDoWeNeed]
Measure = Calc
Formula = #ScreenWidth# * #ScreenHeight#
[GenerateEmptyCollisionMap]
Measure = String
Disabled = 1
String
RegExpSubstitute = 1
DynamicVariables = 1
Substitute = "(.*)" : "\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1\1", "(.{[HowLongOfACollisionMapStringDoWeNeed]}).*" : "\1"
OnUpdateAction = [!SetVariable Collisions [GenerateEmptyCollisionMap]]
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Init: Draw the game screen and initialize game hooks/events
; Also do a lot of other garbage cause this skin ain't organized
; at all yo. WOOOOOOO
; But it works so that's good
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[GameX]
Measure = Calc
Formula = (#Scrolling# = 1 ? (#PlayerX# < (#GameWidth# / 2) ? 0 : (#PlayerX# > (#ScreenWidth# - (#GameWidth#) / 2) ? (((#GameWidth# - #ScreenWidth#) * #TileSize#) * #Scale#) : Neg(((#PlayerX# - Ceil(#GameWidth# / 2)) * #TileSize# ) * #Scale#))) : 0)
Group   = PlayerUpdate
DynamicVariables = 1
[GameY]
Measure = Calc
Formula = (#Scrolling# = 1 ? (#PlayerY# < (#GameHeight# / 2) ? 0 : (#PlayerY# > (#ScreenHeight# - (#GameHeight#) / 2) ? (((#GameHeight# - #ScreenHeight#) * #TileSize#) * #Scale#) : Neg(((#PlayerY# - Ceil(#GameHeight# / 2)) * #TileSize# ) * #Scale#))) : 0)
Group   = PlayerUpdate
DynamicVariables = 1

[GameAreaBG]
Meter = Shape
Shape = Rectangle 0,0,(#GameWidth# * #TileSize# * #Scale#), (#GameHeight# * #TileSize# * #Scale#) | FillColor 0,0,0,255 | StrokeWidth 0
LeftMouseUpAction=[!SetVariable Mouserx "(($MouseX$ / (#TileSize# * #Scale#)) + (([GameX] * -1) / (#TileSize# * #Scale#)))"][!SetVariable Mousery "(($MouseY$ / (#TileSize# * #Scale#)) + (([GameY] * -1) / (#TileSize# * #Scale#)))"][!UpdateMeasureGroup Mousers]

[GameArea]
Meter = Shape
Shape = Rectangle 0,0,(#GameWidth# * #TileSize# * #Scale#), (#GameHeight# * #TileSize# * #Scale#) | FillColor 0,0,0,255 | StrokeWidth 0

[GetMouseX]
Measure = Calc
DynamicVariables = 1
Group = Mousers
Formula = (Ceil(#Mouserx#) - 1) = -1 ? 0 : (Ceil(#Mouserx#) - 1)
[GetMouseY]
Measure = Calc
DynamicVariables = 1
Group = Mousers
Formula = (Ceil(#Mousery#) - 1) = -1 ? 0 : (Ceil(#Mousery#) - 1)
OnUpdateAction = [!SetVariable SelectedTile "([GetMouseY] * #ScreenWidth# + [GetMouseX])"][!UpdateMeasure RewriteChar]

[RewriteChar]
Measure = String
String = #Collisions#
DynamicVariables = 1
RegExpSubstitute = 1
Substitute = "(.{#SelectedTile#})(.)(.*)" : "\1#CurChar#\3"
OnChangeAction = [!SetVariable Collisions [RewriteChar]][!UpdateMeasure CollisionGenerator]

[Background]
Meter     = Image
Y = ((3 * #Scale#) + [GameY])
X = [GameX]
DynamicVariables = 1
Group = PlayerUpdate
ImageName = #@#Games/#Game#/Resources/Backgrounds/#Background#
Container = GameArea
PreserveAspectRatio = 1


[backgroundca]
measure = calc
DynamicVariables = 1
Formula = [Background:W]*#Scale#
OnUpdateAction = [!SetOption Background W [#CURRENTSECTION#]][!UpdateMeter Background][!Redraw][!DisableMeasure #CURRENTSECTION#]

[CollisionGenerator]
Measure = String
DynamicVariables = 1
String = #Collisions#
RegExpSubstitute = 1
Substitute = "(.)" : "\1 "
OnUpdateAction = [!UpdateMeter DrawTheStuff][!UpdateMeter Save][!Redraw]

[DrawTheStuff]
Meter = String
Y = [GameY]
X = ((3 * #Scale#) + [GameX])
Group = PlayerUpdate
FontFace = BPDots
DynamicVariables = 1
FontSize = ((#Scale#*#TileSize#)*0.65)
FontColor = 255,255,255,255
StringEffect = Border
FontEffectColor = 0,0,0,255
w = (#ScreenWidth# * (#Scale#*#TileSize#))
Container = GameArea
ClipString = 2
text = [CollisionGenerator]
InlineSetting = CharacterSpacing | 0 | 0 | 1
InlinePattern = (.)



[ControlPanelBG]
Meter = Shape
Shape = Rectangle (#GameWidth# * #TileSize# * #Scale#), 0, 170, (#GameHeight# * #TileSize# * #Scale#) | FillColor 40,40,40,255 | StrokeWidth 0

[ControlContainer]
Meter = String
X = (#GameWidth# * #TileSize# * #Scale#)
W = 170
H = (#GameHeight# * #TileSize# * #Scale#)
SolidColor = 0,0,0,255

[InputText]
Measure      = Plugin
Plugin       = InputText
FocusDismiss = 0 
FontSize     = 13
SolidColor   = 255,255,255,2552
X = (#GameWidth# * #TileSize# * #Scale#)
W = 170
Command1     = [!SetVariable CurChar $UserInput$][!UpdateMeterGroup Textstuff][!Redraw]
Command2     = [!SetVariable CurType $UserInput$][!UpdateMeterGroup Textstuff][!Redraw]
Command3     = [!WriteKeyValue Variables Game $UserInput$][!Refresh]
Command4     = [!WriteKeyValue Variables Screen $UserInput$][!Refresh]

[Textstuff]
FontColor = 255,255,255,255
DynamicVariables = 1
Container = ControlContainer
Group = Textstuff

[TileChar]
Meter = String
MeterStyle = Textstuff
Text = Char: 

[InChar]
Meter = String
MeterStyle = Textstuff
X = 50
Text = #CurChar#
LeftMouseUpAction=!CommandMeasure "InputText" "ExecuteBatch 1"

; [TileType]
; Meter = String
; MeterStyle = Textstuff
; y = 20
; Text = Type: 

; [InType]
; Meter = String
; MeterStyle = Textstuff
; X = 40
; Y = 20
; Text = #CurType#
; LeftMouseUpAction=!CommandMeasure "InputText" "ExecuteBatch 2"

[GameAsker]
Meter = String
MeterStyle = Textstuff
Y = 40
Text = Game: 

[InGame]
Meter = String
MeterStyle = Textstuff
X = 50
Y = 40
Text = #Game#
LeftMouseUpAction=!CommandMeasure "InputText" "ExecuteBatch 3"

[ScreenAsker]
Meter = String
MeterStyle = Textstuff
Y = 60
Text = Screen: 

[InScreen]
Meter = String
MeterStyle = Textstuff
X = 50
Y = 60
Text = #Screen#
LeftMouseUpAction=!CommandMeasure "InputText" "ExecuteBatch 4"

[Save]
Meter = String
MeterStyle = Textstuff
Y = 80
Text = Save
DynamicVariables = 1
LeftMouseUpAction=[!WriteKeyValue Variables Collisions #Collisions# "#@#Games/#Game#/Screens/#Screen#.inc"]


[mUP]
Meter = Shape
DynamicVariables = 1
Group = PlayerUpdate
Shape = Rectangle ((#GameWidth# * #Scale#) * #TileSize# + #HudPanelWidth# / 2 - #ButtonSize# / 2), ((#GameWidth# * #Scale#) * #TileSize# - #ButtonSize# * 4.2), #ButtonSize#, #ButtonSize# | FillColor 255,255,255,255 | StrokeWidth 0
LeftMouseUpAction = [!SetVariable PlayerY (#PlayerY#-#GameHeight#)][!UpdateMeasureGroup PlayerUpdate][!UpdateMeasureGroup PlayerUpdate][!UpdateMeterGroup PlayerUpdate][!Redraw]

[mLEFT]
Meter = Shape
DynamicVariables=1
Group = PlayerUpdate
Shape = Rectangle ((#GameWidth# * #Scale#) * #TileSize# + #HudPanelWidth# / 2 - #ButtonSize# * 1.8), ((#GameWidth# * #Scale#) * #TileSize# - #ButtonSize# * 3), #ButtonSize#, #ButtonSize# | FillColor 255,255,255,255 | StrokeWidth 0
LeftMouseUpAction = [!SetVariable PlayerX (#PlayerX#-#GameWidth#)][!UpdateMeasureGroup PlayerUpdate][!UpdateMeterGroup PlayerUpdate][!Redraw]

[mRIGHT]
Meter = Shape
DynamicVariables=1
Group = PlayerUpdate
Shape = Rectangle ((#GameWidth# * #Scale#) * #TileSize# + #HudPanelWidth# / 2 + #ButtonSize# * 0.8), ((#GameWidth# * #Scale#) * #TileSize# - #ButtonSize# * 3), #ButtonSize#, #ButtonSize# | FillColor 255,255,255,255 | StrokeWidth 0
LeftMouseUpAction = [!SetVariable PlayerX (#PlayerX#+#GameWidth#)][!UpdateMeasureGroup PlayerUpdate][!UpdateMeterGroup PlayerUpdate][!Redraw]

[mDOWN]
Meter = Shape
DynamicVariables=1
Group = PlayerUpdate
Shape = Rectangle ((#GameWidth# * #Scale#) * #TileSize# + #HudPanelWidth# / 2 - #ButtonSize# / 2), ((#GameWidth# * #Scale#) * #TileSize# - #buttonSize# * 1.8), #ButtonSize#, #ButtonSize# | FillColor 255,255,255,255 | StrokeWidth 0
LeftMouseUpAction = [!SetVariable PlayerY (#PlayerY#+#GameHeight#)][!UpdateMeasureGroup PlayerUpdate][!UpdateMeterGroup PlayerUpdate][!Redraw]


