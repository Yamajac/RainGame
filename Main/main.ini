;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
;   RAINGAME - Yamajac, /u/Yamatjac, @Yamajac#3141, CharlotteConnolly@yamajac.com
;
;   The most fully featured game engine to ever exist in Rainmeter. 
;   (Though it's also the only public one, so maybe that's a little disingenuous :D)
;
;   Play prebuilt custom worlds from other users or build your own using the included
;   world builder(Soonâ„¢). Quests, monsters, inventories, you name it... eventually.
;
;  
;   TODO:
;       - Screen transitions
;       - Object interactions
;       - NPC Dialogue
;       - Inventory
;       - Quests
;       - Random Encounters
;       - Build the world builder
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; All the boring shit
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[Rainmeter]
Update = 16
DefaultUpdateDivider = -1
[Metadata]
Name        = Raingame
Author      = Yamajac - /u/Yamatjac
Information = A game engine written entirely in Rainmeter .ini files
Version     = Alpha

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Some more boring shit
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[Variables]
Game = ExampleGame

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Game Functions - Player movement, collision detection, etc
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[Refresher]
Measure  = Calc
Group    = NoUpdate
Disabled = 1
DynamicVariables = 1
OnUpdateAction   = [!WriteKeyValue Variables PlayerX #PlayerX# "#@#Games/#Game#/#Game#.inc"][!WriteKeyValue Variables PlayerY #PlayerY# "#@#Games/#Game#/#Game#.inc"][!WriteKeyValue Variables CurrentScreen #CurrentScreen# "#@#Games/#Game#/#Game#.inc"][!Refresh]
; PLAYER MOVEMENT
[HandleMoveUp]
Measure  = Calc
Formula  = #PlayerY# - 1
Group    = MoveUp | NoUpdate
Disabled = 1
DynamicVariables = 1
OnUpdateAction = [!SetOption DetectMoveUp MinValue "([#CURRENTSECTION#] * #GameWidth# + #PlayerX#)"][!UpdateMeasure DetectMoveUp]
[DetectMoveUp]
Measure  = String
String   = #Collisions#
Group    = NoUpdate
Disabled = 1
DynamicVariables = 1
RegExpSubstitute = 1
Substitute       = ".{[DetectMoveUp:MinValue]}(.).*":"\1"
IfConditionMode = 1
IfCondition     = [#Tile[&DetectMoveUp]] = 0
IfTrueAction    = [!SetVariable PlayerY [HandleMoveUp]][!UpdateMeasureGroup Tile[#CURRENTSECTION#]][!UpdateMeasureGroup PlayerMoved][!UpdateMeterGroup PlayerMoved][!Redraw]
IfFalseAction   = [!UpdateMeasureGroup Tile[#CURRENTSECTION#]]
IfCondition2    = [#Tile[&DetectMoveUp]] = 2
IfTrueAction2   = [!SetVariable PlayerY [#Y[&DetectMoveUp]]][!SetVariable PlayerX [#X[&DetectMoveUp]]][!SetVariable CurrentScreen [#Screen[&DetectMoveUp]]][!UpdateMeasure Refresher]

[HandleMoveLeft]
Measure  = Calc
Formula  = #PlayerX# - 1
Group    = MoveLeft | NoUpdate
Disabled = 1
DynamicVariables = 1
OnUpdateAction   = [!SetOption DetectMoveLeft MinValue "(#PlayerY# * #GameWidth# + [#CURRENTSECTION#])"][!UpdateMeasure DetectMoveLeft]
[DetectMoveLeft]
Measure  = String
String   = #Collisions#
Group    = NoUpdate
Disabled = 1
DynamicVariables = 1
RegExpSubstitute = 1
Substitute       = ".{[DetectMoveLeft:MinValue]}(.).*":"\1"
IfConditionMode = 1
IfCondition     = [#Tile[&DetectMoveLeft]] = 0
IfTrueAction    = [!SetVariable PlayerX [HandleMoveLeft]][!UpdateMeasureGroup Tile[#CURRENTSECTION#]][!UpdateMeasureGroup PlayerMoved][!UpdateMeterGroup PlayerMoved][!Redraw]
IfFalseAction   = [!UpdateMeasureGroup Tile[#CURRENTSECTION#]]
IfCondition2    = [#Tile[&DetectMoveLeft]] = 2
IfTrueAction2   = [!SetVariable PlayerY [#Y[&DetectMoveLeft]]][!SetVariable PlayerX [#X[&DetectMoveLeft]]][!SetVariable CurrentScreen [#Screen[&DetectMoveLeft]]][!UpdateMeasure Refresher]

[HandleMoveRight]
Measure  = Calc
Formula  = #PlayerX# + 1
Group    = MoveRight | NoUpdate
Disabled = 1
DynamicVariables = 1
OnUpdateAction   = [!SetOption DetectMoveRight MinValue "(#PlayerY# * #GameWidth# + [#CURRENTSECTION#])"][!UpdateMeasure DetectMoveRight]
[DetectMoveRight]
Measure  = String
String   = #Collisions#
Group    = NoUpdate
Disabled = 1
DynamicVariables = 1
RegExpSubstitute = 1
Substitute       = ".{[DetectMoveRight:MinValue]}(.).*":"\1"
IfConditionMode = 1
IfCondition     = [#Tile[&DetectMoveRight]] = 0
IfTrueAction    = [!SetVariable PlayerX [HandleMoveRight]][!UpdateMeasureGroup Tile[#CURRENTSECTION#]][!UpdateMeasureGroup PlayerMoved][!UpdateMeterGroup PlayerMoved][!Redraw]
IfFalseAction   = [!UpdateMeasureGroup Tile[#CURRENTSECTION#]]
IfCondition2    = [#Tile[&DetectMoveRight]] = 2
IfTrueAction2   = [!SetVariable PlayerY [#Y[&DetectMoveRight]]][!SetVariable PlayerX [#X[&DetectMoveRight]]][!SetVariable CurrentScreen [#Screen[&DetectMoveRight]]][!UpdateMeasure Refresher]

[HandleMoveDown]
Measure  = Calc
Formula  = #PlayerY# + 1
Group    = MoveDown | NoUpdate
Disabled = 1
DynamicVariables = 1
OnUpdateAction   = [!SetOption DetectMoveDown MinValue "([#CURRENTSECTION#] * #GameWidth# + #PlayerX#)"][!UpdateMeasure DetectMoveDown]
[DetectMoveDown]
Measure  = String
String   = #Collisions#
Group    = NoUpdate
Disabled = 1
DynamicVariables = 1
RegExpSubstitute = 1
Substitute       = ".{[DetectMoveDown:MinValue]}(.).*":"\1"
IfConditionMode = 1
IfCondition     = [#Tile[&DetectMoveDown]] = 0
IfTrueAction    = [!SetVariable PlayerY [HandleMoveDown]][!UpdateMeasureGroup Tile[#CURRENTSECTION#]][!UpdateMeasureGroup PlayerMoved][!UpdateMeterGroup PlayerMoved][!Redraw]
IfFalseAction   = [!UpdateMeasureGroup Tile[#CURRENTSECTION#]]
IfCondition2    = [#Tile[&DetectMoveDown]] = 2
IfTrueAction2   = [!SetVariable PlayerY [#Y[&DetectMoveDown]]][!SetVariable PlayerX [#X[&DetectMoveDown]]][!SetVariable CurrentScreen [#Screen[&DetectMoveDown]]][!UpdateMeasure Refresher]



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Pre-Init: Grab the current game and load the data into memory
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[LoadGame]
@IncludeGame   = #@#Games/#Game#/#Game#.inc
@IncludeScreen = #@#Games/#Game#/Screens/#CurrentScreen#.inc

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Init: Draw the game screen and initialize game hooks/events
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[GameArea]
Meter = Shape
Shape = Rectangle 0,0,(#GameWidth# * #TileSize#), (#GameHeight# * #TileSize#) | FillColor 0,0,0,255 | StrokeWidth 0

[Background]
Meter     = Image
ImageName = #@#Games/#Game#/Resources/#Background#

[Player]
Meter = Shape
Group = PlayerMoved
Shape = Rectangle (#PlayerX# * #TileSize#), (#PlayerY# * #TileSize#), #TileSize#, #TileSize# | FillColor 255,0,0,80 | StrokeWidth 0
DynamicVariables = 1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Post-Init: Start the main game 'loop'
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[RUN]
Measure = Calc
OnUpdateAction = [!EnableMeasureGroup NoUpdate]














